%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /Users/jeffersson_agudelo/Documents/PSC_here/PSC_This_mac/test_runs_here/my_case_particles/pxyze.txt
%
% Auto-generated by MATLAB on 18-May-2020 22:53:23

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 6);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = " ";

% Specify column names and types
opts.VariableNames = ["xe", "ye", "ze", "pxe", "pye", "pze"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.ConsecutiveDelimitersRule = "join";
opts.LeadingDelimitersRule = "ignore";

% Import the data
pxyze = readtable("/Users/jeffersson_agudelo/Documents/PSC_here/PSC_This_mac/test_runs_here/my_case_particles/pxyze.txt", opts);

%% Convert to output type
pxyze = table2array(pxyze);

%% Clear temporary variables
clear opts



% This shows that using a uniform distribution to extract values from a normal distribution works 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
pxe=pxyze(:,4);

arrayA=zeros(length(pxe)/2,1);
for i = 1:length(pxe)/2
    arrayA(i) = pxe(randi(length(pxe)));
end
f1=figure(1);
 histogram(pxe,100);
 ylabel('Number of electrons','Interpreter','latex','FontSize',18)
 xlabel('$$|v_{e}|$$','Interpreter','latex','FontSize',18)
f2=figure(2);
 histogram(arrayA,100);
 ylabel('Subset number of electrons','Interpreter','latex','FontSize',18)
 xlabel('$$|v_{e}|$$','Interpreter','latex','FontSize',18)

%r = randi([-10 10],1,1000);
%f13=figure(13);
%histogram(r,100);
cd '/Users/jeffersson_agudelo/Downloads/Electron_project/myplots';
  saveas(f1,'electron_data.png');
  saveas(f2,'sub_electron_data.png');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%using the external function
cd '/Users/jeffersson_agudelo/Documents/CB104_local_data/Matlab_Scripts_here';
pxe=pxyze(:,4);
pye=pxyze(:,5);
%Generate_rand_numbers(pxe1, pxe2, num_bins, times_l)
[xhat1, xhat2] = Generate_rand_numbers(pxe, pye, 100, 4);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%Generate random numbers following a given distributions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
num_bins=100;
[hist_pxe,edges_pxe] = histcounts(pxe,num_bins); % create the histogram counts
hist_pxe_max=max(hist_pxe); % Define the maximum upper boundary
a=edges_pxe(1); % define the edges
b=edges_pxe(num_bins+1);
times_l=3; %Chose how big the size of the new data
xhat=zeros(times_l*length(pxe),1); % allocate the array to keep the new distribution

count=0;
count2=0;
while (xhat(times_l*length(pxe),1)==0)% && count~=100000000) 
    xhati=a +(b-a)*rand; %calculate the random x
    yhati=rand*hist_pxe_max; % calculate the random distribution yhat
    
    for i=1:num_bins % search the position
        if edges_pxe(1,i) <= xhati && xhati <edges_pxe(1,i+1)  
            foo=hist_pxe(1,i); % this is pi_tilde(xhat)
        else
            continue
        end
        
        if yhati < foo
            count2=count2+1;
            xhat(count2,1)=xhati; % Save the value of the distribution
            %yhat(count2,1)=yhati;
        else
            continue
        end
    end
        count=count+1;
end
     
[hist_xhat,edges_xhat] = histcounts(xhat,num_bins); % create the histogram counts of the new variable

% make plots to check the results and see how it works
f1=figure(1);
bar(hist_pxe)
f2=figure(2);
bar(hist_xhat)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



    
f19=figure(19);
bar(hist_pxe)
f20=figure(20);
plot(edges_pxe(1:100),hist_pxe)


% Use just half of the distribution and define the limits
a=-0.3; b=0;
pxe2=(pxe >= a & pxe <= b).*pxe;
f10=figure(100);
hpe=histogram(pxe2,100);
%histfit(pxe2,100);

pxe2sum=sum(pxe2);
pxe2n=pxe2/abs(pxe2sum);
f11=figure(11);
hpe=histogram(pxe2n,100);
pxe2sumn=sum(pxe2n);



cd '/Users/jeffersson_agudelo/Documents/CB104_local_data/Matlab_Scripts_here'

%Hist = [1, 6, 7, 100, 0, 0, 0, 2, 3, 5, 100, 200, 100, 50, 80, 0, 0, 0, 0, 10];

[Npxe,edges_pxe] = histcounts(pex,100);
[Out_Data, Out_PDF, CHist] = Complement_PDF(Npxe, 10000, 5);

f17=figure(17);
histogram(Out_Data,100);
f18=figure(18);
histogram(x,100);
f19=figure(19);
bar(Out_Data)



%Previous attemps
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for i = 1:10%length(pxe)
    xhati=a +(b-a)*rand;
    yhati=rand*hist_pxe_max;
     foo=(edges_pxe==xhati); %get the index to check the condition in the distribution 
    if yhati < hist_pxe(foo)
        xhat(i)=xhati;
        yhat(i)=yhati;
    else
        disp ('no');
    end
end
    
while (xhat(1)==0 && count~=10) 
     %get the index to check the condition in the distribution 
    count=count+1;
    disp('hola')
end

foo=0;
for i=1:100
    if edges_pxe(i) <= xhati && xhati <edges_pxe(i+1)  
    foo=hist_pxe(i);
    else
        continue
    end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

